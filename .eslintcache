[{"/Users/carlhagred/Developer/React/SSDL/src/index.js":"1","/Users/carlhagred/Developer/React/SSDL/src/App.js":"2","/Users/carlhagred/Developer/React/SSDL/src/components/song-tile/index.js":"3","/Users/carlhagred/Developer/React/SSDL/src/components/tile-container/index.js":"4","/Users/carlhagred/Developer/React/SSDL/src/components/score/index.js":"5","/Users/carlhagred/Developer/React/SSDL/src/components/title/index.js":"6","/Users/carlhagred/Developer/React/SSDL/src/components/timer/index.js":"7"},{"size":442,"mtime":1609333880269,"results":"8","hashOfConfig":"9"},{"size":4623,"mtime":1609426841185,"results":"10","hashOfConfig":"9"},{"size":2002,"mtime":1609415901703,"results":"11","hashOfConfig":"9"},{"size":1102,"mtime":1609412835190,"results":"12","hashOfConfig":"9"},{"size":1636,"mtime":1609415916990,"results":"13","hashOfConfig":"9"},{"size":868,"mtime":1609426640413,"results":"14","hashOfConfig":"9"},{"size":1155,"mtime":1609413065904,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"yn69jv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/Users/carlhagred/Developer/React/SSDL/src/index.js",[],["35","36"],"/Users/carlhagred/Developer/React/SSDL/src/App.js",[],"/Users/carlhagred/Developer/React/SSDL/src/components/song-tile/index.js",[],["37","38"],"/Users/carlhagred/Developer/React/SSDL/src/components/tile-container/index.js",["39"],"import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SongTile from \"../song-tile\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-directions: row;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 100vw;\n    margin-top: 100px;\n`;\nfunction TileContainer({ toggleCardClick, words }) {\n    const [boomers, setBoomers] = useState([]);\n    const getRandomIndex = () => {\n        return Math.round(Math.random() * (words.length - 1));\n    };\n    useEffect(() => {\n        const r1 = getRandomIndex();\n        let r2 = getRandomIndex();\n        while (r1 === r2) {\n            r2 = getRandomIndex();\n        }\n        setBoomers({ [r1]: \"boom\", [r2]: \"boom\" });\n    }, [words]);\n    return (\n        <Wrapper>\n            {words.map((word, index) => (\n                <SongTile\n                    toggleCardClick={toggleCardClick}\n                    boom={boomers[index]}\n                    word={word}\n                    number={index + 1}\n                />\n            ))}\n        </Wrapper>\n    );\n}\n\nexport default TileContainer;\n","/Users/carlhagred/Developer/React/SSDL/src/components/score/index.js",[],"/Users/carlhagred/Developer/React/SSDL/src/components/title/index.js",["40"],"import \"./title.css\";\nimport styled from \"styled-components\";\nimport useSound from \"use-sound\";\nimport { useEffect, useState } from \"react\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 300px;\n`;\n\nconst H1 = styled.h1``;\nfunction Title({ sound }) {\n    const [playing, setPlaying] = useState(false);\n    const [play, { stop }] = useSound(sound);\n    const toggle = () => {\n        if (playing) {\n            setPlaying(false);\n            stop();\n        } else {\n            setPlaying(true);\n            play();\n        }\n    };\n    useEffect(() => {\n        setPlaying(false);\n        stop();\n    }, [sound]);\n    return (\n        <Wrapper>\n            <H1 onClick={toggle} className=\"glow\">\n                Så ska de låouta\n            </H1>\n        </Wrapper>\n    );\n}\n\nexport default Title;\n","/Users/carlhagred/Developer/React/SSDL/src/components/timer/index.js",["41","42","43","44"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst ButtonsWrapper = styled.div`\n    display: flex;\n`;\n\nconst TimeLeft = styled.h1(\n    ({ warning }) => `\n    color: ${warning ? \"red\" : \"white\"};\n    font-size: 40px;\n`\n);\nconst Timer = ({ seconds, setSeconds, isActive, setIsActive }) => {\n    function toggle() {\n        setIsActive(!isActive);\n    }\n\n    function reset() {\n        setSeconds(30);\n        setIsActive(true);\n    }\n\n    useEffect(() => {\n        let interval = null;\n        if (isActive && seconds !== 0) {\n            interval = setInterval(() => {\n                setSeconds((seconds) => seconds - 1);\n            }, 1000);\n        } else if (seconds === 0) {\n            setIsActive(false);\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [isActive, seconds]);\n\n    return (\n        <Wrapper>\n            <TimeLeft warning={seconds <= 5}>{seconds}</TimeLeft>\n        </Wrapper>\n    );\n};\n\nexport default Timer;\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"45","replacedBy":"49"},{"ruleId":"47","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":25,"column":8,"nodeType":"53","endLine":25,"endColumn":15,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":29,"column":8,"nodeType":"53","endLine":29,"endColumn":15,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":11,"column":7,"nodeType":"59","messageId":"60","endLine":11,"endColumn":21},{"ruleId":"57","severity":1,"message":"61","line":22,"column":14,"nodeType":"59","messageId":"60","endLine":22,"endColumn":20},{"ruleId":"57","severity":1,"message":"62","line":26,"column":14,"nodeType":"59","messageId":"60","endLine":26,"endColumn":19},{"ruleId":"51","severity":1,"message":"63","line":42,"column":8,"nodeType":"53","endLine":42,"endColumn":27,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandomIndex'. Either include it or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array.",["68"],"no-unused-vars","'ButtonsWrapper' is assigned a value but never used.","Identifier","unusedVar","'toggle' is defined but never used.","'reset' is defined but never used.","React Hook useEffect has missing dependencies: 'setIsActive' and 'setSeconds'. Either include them or remove the dependency array. If 'setSeconds' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [getRandomIndex, words]",{"range":"76","text":"77"},"Update the dependencies array to be: [sound, stop]",{"range":"78","text":"79"},"Update the dependencies array to be: [isActive, seconds, setIsActive, setSeconds]",{"range":"80","text":"81"},[732,739],"[getRandomIndex, words]",[672,679],"[sound, stop]",[983,1002],"[isActive, seconds, setIsActive, setSeconds]"]